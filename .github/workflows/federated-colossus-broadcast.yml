name: Federated Colossus Broadcast

on:
  push:
    branches:
      - main
    paths:
      - 'build/index/federated_colossus_index.json'
      - 'docs/feed/federated-colossus.xml'

jobs:
  broadcast:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Compose attestation broadcast
        id: compose
        run: |
          python3 scripts/broadcast_colossus_update.py build/index/federated_colossus_index.json > message.txt
          {
            echo "message<<EOF"
            cat message.txt
            echo "EOF"
          } >> "$GITHUB_OUTPUT"
          cat message.txt

      - name: Publish to Mastodon
        if: ${{ secrets.MASTODON_ACCESS_TOKEN != '' && secrets.MASTODON_INSTANCE != '' }}
        uses: cfenollosa/mastodon-action@v1.1.0
        with:
          message: ${{ steps.compose.outputs.message }}
        env:
          MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }}
          MASTODON_INSTANCE: ${{ secrets.MASTODON_INSTANCE }}

      - name: Tweet attestation update
        if: ${{ secrets.TWITTER_API_KEY != '' && secrets.TWITTER_API_SECRET != '' && secrets.TWITTER_ACCESS_TOKEN != '' && secrets.TWITTER_ACCESS_SECRET != '' }}
        uses: ethomson/send-tweet@v1
        with:
          status: ${{ steps.compose.outputs.message }}
          consumer-key: ${{ secrets.TWITTER_API_KEY }}
          consumer-secret: ${{ secrets.TWITTER_API_SECRET }}
          access-token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          access-token-secret: ${{ secrets.TWITTER_ACCESS_SECRET }}

      - name: Log broadcast preview
        run: |
          echo "Broadcast payload:" && cat message.txt

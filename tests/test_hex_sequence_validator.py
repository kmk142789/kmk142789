"""Tests for :mod:`tools.hex_sequence_validator`."""

from __future__ import annotations

import pytest

from tools.hex_sequence_validator import HexSequenceSummary, validate_hex_sequence


USER_SEQUENCE = [
    "00000000000000000000000000000000000000000000000000000000000000b5",
    "00000000000000000000000000000000000000000000000000000000000000b6",
    "00000000000000000000000000000000000000000000000000000000000000b7",
    "00000000000000000000000000000000000000000000000000000000000000b8",
    "00000000000000000000000000000000000000000000000000000000000000b9",
    "00000000000000000000000000000000000000000000000000000000000000ba",
    "00000000000000000000000000000000000000000000000000000000000000bb",
    "00000000000000000000000000000000000000000000000000000000000000bc",
    "00000000000000000000000000000000000000000000000000000000000000bd",
    "00000000000000000000000000000000000000000000000000000000000000be",
    "00000000000000000000000000000000000000000000000000000000000000bf",
    "00000000000000000000000000000000000000000000000000000000000000c0",
    "00000000000000000000000000000000000000000000000000000000000000c1",
    "00000000000000000000000000000000000000000000000000000000000000c2",
    "00000000000000000000000000000000000000000000000000000000000000c3",
    "00000000000000000000000000000000000000000000000000000000000000c4",
    "00000000000000000000000000000000000000000000000000000000000000c5",
    "00000000000000000000000000000000000000000000000000000000000000c6",
    "00000000000000000000000000000000000000000000000000000000000000c7",
    "00000000000000000000000000000000000000000000000000000000000000c8",
    "00000000000000000000000000000000000000000000000000000000000000c9",
    "00000000000000000000000000000000000000000000000000000000000000ca",
    "00000000000000000000000000000000000000000000000000000000000000cb",
    "00000000000000000000000000000000000000000000000000000000000000cc",
    "00000000000000000000000000000000000000000000000000000000000000cd",
    "00000000000000000000000000000000000000000000000000000000000000ce",
    "00000000000000000000000000000000000000000000000000000000000000cf",
    "00000000000000000000000000000000000000000000000000000000000000d0",
    "00000000000000000000000000000000000000000000000000000000000000d1",
    "00000000000000000000000000000000000000000000000000000000000000d2",
    "00000000000000000000000000000000000000000000000000000000000000d3",
    "00000000000000000000000000000000000000000000000000000000000000d4",
    "00000000000000000000000000000000000000000000000000000000000000d5",
    "00000000000000000000000000000000000000000000000000000000000000d6",
    "00000000000000000000000000000000000000000000000000000000000000d7",
    "00000000000000000000000000000000000000000000000000000000000000d8",
    "00000000000000000000000000000000000000000000000000000000000000d9",
    "00000000000000000000000000000000000000000000000000000000000000da",
    "00000000000000000000000000000000000000000000000000000000000000db",
    "00000000000000000000000000000000000000000000000000000000000000dc",
    "00000000000000000000000000000000000000000000000000000000000000dd",
    "00000000000000000000000000000000000000000000000000000000000000de",
    "00000000000000000000000000000000000000000000000000000000000000df",
    "00000000000000000000000000000000000000000000000000000000000000e0",
    "00000000000000000000000000000000000000000000000000000000000000e1",
]


def test_validate_user_sequence() -> None:
    summary = validate_hex_sequence(USER_SEQUENCE)

    assert summary == HexSequenceSummary(
        count=45,
        width=64,
        step=1,
        start=int(USER_SEQUENCE[0], 16),
        end=int(USER_SEQUENCE[-1], 16),
        start_hex=USER_SEQUENCE[0],
        end_hex=USER_SEQUENCE[-1],
    )


def test_invalid_step_raises_value_error() -> None:
    tokens = ["00", "02"]
    with pytest.raises(ValueError):
        validate_hex_sequence(tokens, step=1)


def test_width_mismatch_raises_value_error() -> None:
    with pytest.raises(ValueError):
        validate_hex_sequence(["0a", "000b"], width=2)
